#!/usr/local/bin/perl

use strict;
use warnings;
use Morsulus::Ordinary::Classic;
use Morsulus::Ordinary::Legacy;
use Getopt::Euclid;

my $ord = Morsulus::Ordinary::Classic->new(dbname => $ARGV{-db});

open my $descs, '<', $ARGV{-i};

while (my $record = <$descs>)
{
    print STDERR $record if $ARGV{-verbose};
    $record =~ s/\r?\n$//;
    my $entry = Morsulus::Ordinary::Legacy->from_string($record);
    next unless $entry->has_blazon;
    next unless $entry->split_descs or $ARGV{-nulls};
    print STDERR "finding blazon" if $ARGV{-verbose};
    my ($blazon) = $ord->add_blazon($entry->text);
    #$ord->Blazon->search({ blazon => $entry->text } );
    print STDERR "got blazon ", $blazon->blazon if $ARGV{-verbose};
    $ord->drop_descs($blazon) unless $ARGV{-merge};
    print STDERR "old descs dropped" if $ARGV{-verbose} && !$ARGV{-merge};
    $ord->add_desc($_, $blazon) for $entry->split_descs;
}

__END__

=head1 NAME

merge_descs - update descriptions in database from legacy format flat file

=head1 SYNOPSIS

    merge_descs -db oanda.db -i descs.db 

Update blazons in oanda.db from descs.db. Additional options specify
whether to replace or merge with existing descriptions and how to handle
input records with no descriptions.

The default behavior is to replace existing descriptions.
    
=head1 REQUIRED

=over

=item -db <file>

SQLite database file to be created or updated with Ordinary entries. 

=for Euclid:
    file.type: writable

=item -i <file>

Legacy format file with descriptions.

=for Euclid:
    file.type: readable

=back

=head1 OPTIONS

=over

=item -replace

Replace existing descriptions with descriptions in input file.

=item -merge

Add descriptions in input file to descriptions in database.

=item -[no]nulls

Accept/ignore input records with no descriptions.

=for Euclid:
    false: nonulls

=item -verbose

Emit generous output on the fly.

=back
