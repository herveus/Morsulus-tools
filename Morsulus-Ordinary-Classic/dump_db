#!/usr/local/bin/perl

use strict;
use warnings;
use Morsulus::Ordinary::Classic;
use Morsulus::Ordinary::Legacy;
use Getopt::Euclid;
use Data::Dumper;
use Try::Tiny;

$Data::Dumper::Pair = ":";

my $ord = Morsulus::Ordinary::Classic->new(dbname => $ARGV{-db});

my $search = {};
if ($ARGV{-regdate})
{
    #s/^(.*)$/"$1"/ for (@{$ARGV{-regdate}});
    $search->{registration_date} = [ @{$ARGV{-regdate}} ];
}

if ($ARGV{-regonly})
{
    $search->{release_date} = '';
}

if ($ARGV{-armonly})
{
    $search->{text_blazon_id} = { '!=', undef };
}

if ($ARGV{-anydate})
{
    if (keys %$search)
    {
        die "can't mix -anydate with other args";
    }
    else
    {
        $search = [ { registration_date => [ @{$ARGV{-anydate}} ] },
            { release_date => [ @{$ARGV{-anydate}} ] } ];
    }
}

if ($ARGV{-regid})
{
    $search->{reg_id} =  {-in => $ARGV{-regid} }
}

if ($ARGV{-verbose})
{
    print STDERR Dumper($search);
}

my $regs = $ord->Registration->search($search);
while (my $reg = $regs->next)
{
    #print STDERR 
    print $ord->get_registration($reg)->canonicalize->to_string, "\n";
}

__END__

=head1 NAME

dump_db - script to dump database files to legacy format

=head1 SYNOPSIS

    dump_db -db mydb.db -o oanda.db # dump the whole enchilada
    dump_db -db newdb.db -regdate 201301 # extract registrations to STDOUT

For full or partial extracts. Options for partial extracts will grow as 
needed. Syntax to be made up on the fly...
    
=head1 REQUIRED

=over

=item -db <file>

SQLite database file to be created or updated with Ordinary entries. 

=for Euclid:
    file.type: writable

=back

=head1 OPTIONS

=over

=item -o <file>

Destination for extracted records. Defaults to STDOUT.

=for Euclid:
    file.type: writable
    file.default: '-'

=item -regdate <regdate>

Extract records with this registration date. Multiple instances 
give multiple months. Format is YYYYMM.

=for Euclid:
    repeatable
    regdate.type: /[0-9]{6}/

=item -anydate <regdate>

Extract records with this registration or release date. Multiple instances 
give multiple months. Format is YYYYMM.

=for Euclid:
    repeatable
    regdate.type: /[0-9]{6}/

=item -regonly

Limit items to those without a release date.

=item -armonly

Limit items to those with armory.

=item -regid <regid>...

Extract the specific registrations by ID.

=for Euclid:
    regid.type: integer
    
=item -verbose

Emit generous output as you go.

=back
